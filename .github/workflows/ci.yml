name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Add permissions for security scanning
permissions:
  contents: read
  security-events: write
  actions: read

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # =====================================
  # Code Quality & Linting
  # =====================================
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Type check
        run: npm run type-check

  # =====================================
  # Unit & Integration Tests
  # =====================================
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: lint
    
    strategy:
      matrix:
        package: ['core', 'web', 'mcp']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build core package (dependency for other packages)
        run: npm run build --workspace=@portfolio/core

      - name: Run tests for ${{ matrix.package }}
        run: npm run test --workspace=@portfolio/${{ matrix.package }}
        continue-on-error: true # Some packages might not have tests yet

  # =====================================
  # Build Verification
  # =====================================
  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Build for Netlify
        run: npm run build:netlify

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist
            !packages/*/node_modules

  # =====================================
  # Local MCP Server Testing
  # =====================================
  test-mcp-local:
    name: Test MCP Server (Local)
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Test MCP server endpoint
        run: npm run test:mcp:local
        env:
          TEST_MCP_URL: https://financial-portfolio-shlatchz.netlify.app/api/mcp

  # =====================================
  # Netlify Deployment Testing
  # =====================================
  test-netlify-functions:
    name: Test Netlify Functions
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Test deployed Netlify MCP functions
        run: npm run test:mcp:local
        env:
          TEST_MCP_URL: https://financial-portfolio-shlatchz.netlify.app/api/mcp

  # =====================================
  # Security & Dependency Scanning
  # =====================================
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for known vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always() && github.event_name != 'pull_request'
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload security scan results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: trivy-results.sarif

  # =====================================
  # Release & Deployment (only on main)
  # =====================================
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [build, test-mcp-local, test-netlify-functions]
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-artifacts

  #     - name: Deploy to Netlify
  #       uses: nwtgck/actions-netlify@v3.0
  #       with:
  #         publish-dir: 'packages/web/dist'
  #         production-branch: main
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         deploy-message: "Deploy from GitHub Actions"
  #         enable-pull-request-comment: false
  #         enable-commit-comment: true
  #         overwrites-pull-request-comment: true
  #       env:
  #         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  #     - name: Verify deployment
  #       if: success()
  #       run: npm run verify:deployment
  #       env:
  #         TEST_MCP_URL: ${{ secrets.NETLIFY_SITE_URL }}/api/mcp 